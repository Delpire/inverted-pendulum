/****************************************************************************************
* File:
*
* Description:
*
* Created:
****************************************************************************************/

#ifndef COMPLEMENTARY_FILTER_H
#define COMPLEMENTARY_FILTER_H

/*---------------------------------------------------------------------------------------
*                                       INCLUDES
*--------------------------------------------------------------------------------------*/
#include "stdint.h"

/*---------------------------------------------------------------------------------------
*                                      CONSTANTS
*--------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------
*                                        TYPES
*--------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------
*                                       CLASSES
*--------------------------------------------------------------------------------------*/

/******************************************************************************
* Class: 
*
* Description: 
******************************************************************************/
class ComplementaryFilter
{
public: // methods

    // constructor
    explicit ComplementaryFilter(void);
    
    // runs the filter
    void update(float dT,
                const float gyros[3],
                const float accels[3]);

    void set_attitude(const float quaternion[4]);
    void get_state(float quaternion[4]);
    
public: // fields

private: // methods

private: // fields

    float Kpa, Kia;   // attitude filter gains

    // the state variables
    float quat[4];                  // the orientation quaternion

}; 

#endif // COMPLEMENTARY_FILTER_H
